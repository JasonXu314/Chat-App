{"code":"!function(e){var s={};function r(n){if(s[n])return s[n].exports;var t=s[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,r),t.l=!0,t.exports}r.m=e,r.c=s,r.d=function(e,s,n){r.o(e,s)||Object.defineProperty(e,s,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,s){if(1&s&&(e=r(e)),8&s)return e;if(4&s&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&s&&\"string\"!=typeof e)for(var t in e)r.d(n,t,function(s){return e[s]}.bind(null,t));return n},r.n=function(e){var s=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(s,\"a\",s),s},r.o=function(e,s){return Object.prototype.hasOwnProperty.call(e,s)},r.p=\"\",r(r.s=0)}([function(e,s,r){const n=new(r(1).Server)({port:3e3});let t=new Map,o=new Map,a=[{type:\"message\",sender:\"Server\",message:\"Welcome to the new chatroom!\"}];n.on(\"connection\",e=>{e.on(\"message\",s=>{if(\"registration\"===JSON.parse(s).type){if(!function(e){for(let s of t.values())if(s===e)return!1;return!0}(JSON.parse(s).name))return e.send(JSON.stringify({type:\"rejection\",reason:\"Nickname already taken\"})),void e.close();console.log(`New connection: ${JSON.parse(s).name}`),t.set(e,`${JSON.parse(s).name}`),a.forEach(s=>e.send(JSON.stringify(s))),o.forEach((s,r)=>{s.forEach(s=>{e.send(JSON.stringify({type:\"edit\",id:r,newMsg:s.newMsg,oldMsg:s.oldMsg}))})}),t.forEach((e,r)=>r.send(JSON.stringify({type:\"join\",user:`${JSON.parse(s).name}`}))),a.push({type:\"join\",user:`${JSON.parse(s).name}`})}else if(\"message\"===JSON.parse(s).type)console.log(`Server: recieved '${JSON.parse(s).message}'`),t.forEach((e,r)=>r.send(JSON.stringify({type:\"message\",sender:`${JSON.parse(s).name}`,message:`${JSON.parse(s).message}`,id:JSON.parse(s).id}))),a.push({type:\"message\",sender:`${JSON.parse(s).name}`,message:`${JSON.parse(s).message}`,id:JSON.parse(s).id});else if(\"delete\"===JSON.parse(s).type){let r=a.find(e=>\"message\"===e.type&&e.sender===JSON.parse(s).user&&e.id===JSON.parse(s).id);void 0!==r?(a.splice(a.indexOf(r),1),t.forEach((e,r)=>r.send(JSON.stringify({type:\"delete\",id:JSON.parse(s).id})))):e.send(JSON.stringify({type:\"error\",errormsg:\"Please do not try to delete other peoples' messages!\"}))}else\"edit\"===JSON.parse(s).type?(o.has(JSON.parse(s).id)?o.get(JSON.parse(s).id).push({oldMsg:JSON.parse(s).oldMsg,newMsg:JSON.parse(s).newMsg}):o.set(JSON.parse(s).id,[{oldMsg:JSON.parse(s).oldMsg,newMsg:JSON.parse(s).newMsg}]),t.forEach((r,n)=>{n!==e&&n.send(JSON.stringify({type:\"edit\",id:JSON.parse(s).id,newMsg:JSON.parse(s).newMsg,oldMsg:JSON.parse(s).oldMsg}))})):(e.close(),0===t.size&&(a=[{type:\"message\",sender:\"Server\",message:\"Welcome to the new chatroom!\"}],o=new Map))}),e.on(\"close\",()=>{void 0!==t.get(e)&&(console.log(`${t.get(e)} disconnected`),t.forEach((s,r)=>r.send(JSON.stringify({type:\"disconnect\",user:`${t.get(e)}`}))),a.push({type:\"disconnect\",user:`${t.get(e)}`}),t.delete(e),0===t.size&&(a=[{type:\"message\",sender:\"Server\",message:\"Welcome to the new chatroom!\"}],o=new Map))})}),console.log(\"Server Started\")},function(e,s){throw new Error(\"Module parse failed: Unexpected token (18:8)\\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\\n| \\n| // WebSocket socket.\\n> declare class WebSocket extends events.EventEmitter {\\n|     static CONNECTING: number;\\n|     static OPEN: number;\")}]);","extractedComments":[]}